metadata:
  version: spray-v2.19.0a_k8s-v1.24.1_v1.14-arm64
  type: kubernetes-offline-resource
  kuboard_spray_version:
    min: v1.1.0
  available_at:
    - registry.cn-shanghai.aliyuncs.com/kuboard-spray/kuboard-spray-resource
    - swr.cn-east-2.myhuaweicloud.com/kuboard/kuboard-spray-resource
    - eipwork/kuboard-spray-resource
  issue_date: "2022-05-04"
  owner: "shaohq@foxmail.com"
  can_upgrade_from:
    include:
      - spray-v2.18.[0-9a-]*_k8s-v1.23.[1-6]_v[0-9.]*-arm64
      - spray-master-8d9ed01_k8s-v1.23.[1-3]_v[0-9.]*-arm64
    exclude:
  can_replace_to:
  supported_os:
    - distribution: Ubuntu
      versions:
        - "20.04"
    - distribution: Anolis
      versions:
        - "8.5" 
        - "8.4" 
    - distribution: CentOS
      versions:
        - "7.6"
        - "7.8"
        - "7.9"
        - "8"
    - distribution: RedHat
      versions:
        - "7.9"
        - "8.5"
    - distribution: OracleLinux
      versions:
        - "8.5"
    - distribution: Rocky
      versions:
        - "8.5"
    - distribution: openEuler
      versions:
        - "20.03"
        - "22.03"
    - distribution: Kylin Linux Advanced Server
      versions:
        - "V10"
    - distribution: openSUSE Leap
      versions:
        - "15.3"

data:
  kubespray_version: v2.19.0a
  supported_playbooks:
    install_cluster: pb_cluster.yaml
    remove_node: pb_remove_node.yaml
    add_node: pb_scale.yaml
    sync_nginx_config: pb_sync_nginx_config.yaml
    sync_etcd_address: pb_sync_etcd_address.yaml
    install_addon: pb_install_addon.yaml
    remove_addon: pb_remove_addon.yaml
    cluster_version_containerd: pb_cluster_version_containerd.yaml
    cluster_version_docker: pb_cluster_version_docker.yaml
    upgrade_cluster: pb_upgrade_cluster.yaml
    drain_node: pb_drain_node.yaml
    uncordon_node: pb_uncordon_node.yaml
    cis_scan: true # 只在此属性为 true 的时候激活 CIS 扫描
    renew_cert: pb_renew_cert.yaml
    sync_container_engine_params: pb_sync_container_engine_params.yaml
    backup_etcd: pb_backup_etcd.yaml
    restore_etcd: pb_restore_etcd.yaml

  kubernetes:
    kube_version: "v1.24.1"
    image_arch: arm64
    gcr_image_repo: "gcr.io"
    kube_image_repo: "k8s.gcr.io"
    candidate_admission_plugins: AlwaysAdmit,AlwaysDeny,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,DefaultIngressClass,DefaultStorageClass,DefaultTolerationSeconds,DenyServiceExternalIPs,EventRateLimit,ExtendedResourceToleration,ImagePolicyWebhook,LimitPodHardAntiAffinityTopology,LimitRanger,MutatingAdmissionWebhook,NamespaceAutoProvision,NamespaceExists,NamespaceLifecycle,NodeRestriction,OwnerReferencesPermissionEnforcement,PersistentVolumeClaimResize,PersistentVolumeLabel,PodNodeSelector,PodSecurity,PodTolerationRestriction,Priority,ResourceQuota,RuntimeClass,SecurityContextDeny,ServiceAccount,StorageObjectInUseProtection,TaintNodesByCondition,ValidatingAdmissionWebhook
    default_enabled_admission_plugins: CertificateApproval,CertificateSigning,CertificateSubjectRestriction,DefaultIngressClass,DefaultStorageClass,DefaultTolerationSeconds,LimitRanger,MutatingAdmissionWebhook,NamespaceLifecycle,PersistentVolumeClaimResize,Priority,ResourceQuota,RuntimeClass,ServiceAccount,StorageObjectInUseProtection,TaintNodesByCondition,ValidatingAdmissionWebhook

  container_engine:
    - container_manager: "containerd"
      params:
        containerd_version: 1.6.4
    - container_manager: "docker"
      params:
        docker_version: "20.10"
        docker_containerd_version: 1.4.12

  vars:
    target:
      containerd_version: 1.6.4
      etcd_version: v3.5.4
      kubelet_checksums:
        arm64:
          v1.24.1: c2189c6956afda0f6002839f9f14a9b48c89dcc0228701e84856be36a3aac6bf
        amd64:
          v1.24.1: fc352d5c983b0ccf47acd8816eb826d781f408d27263dd8f761dfb63e69abfde
      kubectl_checksums:
        arm64:
          v1.24.1: b817b54183e089494f8b925096e9b65af3a356d87f94b73929bf5a6028a06271
        amd64:
          v1.24.1: 0ec3c2dbafc6dd27fc8ad25fa27fc527b5d7356d1830c0efbb8adcf975d9e84a
      kubeadm_checksums:
        arm64:
          v1.24.1: 04f18fe097351cd16dc91cd3bde979201916686c6f4e1b87bae69ab4479fda04
        amd64:
          v1.24.1: 15e3193eecbc69330ada3f340c5a47999959bc227c735fa95e4aa79470c085d0
      crun_checksums:
        arm64:
          1.4.4: 2ad2c02ec0b1566f1c5e85223b726b704904cc75c2eb4af298e95b98fe5c166d
        amd64:
          1.4.4: 73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea
      runc_checksums:
        arm64:
          v1.1.1: 20c436a736547309371c7ac2a335f5fe5a42b450120e497d09c8dc3902c28444
        amd64:
          v1.1.1: 5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080
      containerd_archive_checksums:
        arm64:
          1.6.4: 0205bd1907154388dc85b1afeeb550cbb44c470ef4a290cb1daf91501c85cae6
        amd64:
          1.6.4: f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0
      nerdctl_archive_checksums:
        arm64:
          0.19.0: 9d33eb3dd1b4b8fbe969d0f2e26d3a19e443955bd2d2b5e0911ea0066f79a160
        amd64:
          0.19.0: 9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733
      etcd_binary_checksums:
        arm64:
          v3.5.4: 8e9c2c28ed6b35f36fd94300541da10e1385f335d677afd8efccdcba026f1fa7
        amd64:
          v3.5.4: b1091166153df1ee0bb29b47fb1943ef0ddf0cd5d07a8fe69827580a08134def
      calicoctl_download_url: "https://github.com/projectcalico/calico/releases/download/{{ calico_ctl_version }}/calicoctl-linux-{{ image_arch }}"
      calicoctl_binary_checksums:
        amd64:
          v3.23.1: e8fd04d776df5571917512560800bf77f3cdf36ca864c9cae966cb74d62ba4fe
          v3.22.3: a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c
          v3.21.5: 98407b1c608fec0896004767c72cd4b6cf939976d67d3eca121f1f02137c92a7
        arm64:
          v3.23.1: 30f7e118c21ecba445b4fbb27f7ac8bc0d1525ab3c776641433e3b1a3388c65b
          v3.22.3: 3a3e70828c020efd911181102d21cb4390b7b68669898bd40c0c69b64d11bb63
          v3.21.5: cc73e2b8f5b695b6ab06e7856cd516c1e9ec3e903abb510ef465ca6b530e18e6
      calico_crds_archive_checksums:
        v3.23.1: a1754ae4bb158e3b46ba3fb326d8038d54cd0dc2c5c8527eadf2b0a6cf8ef2e3
        v3.22.3: 55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21
        v3.21.5: ffbbaa2bc32b01bf160828d2cfd4504d83c69cb1f74c0028349181ed61bad635
      krew_archive_checksums:
        linux:
          arm64:
            v0.4.3: 0994923848882ad0d4825d5af1dc227687a10a02688f785709b03549dd34d71d
          amd64:
            v0.4.3: 5df32eaa0e888a2566439c4ccb2ef3a3e6e89522f2f2126030171e2585585e4f
      snapshot_controller_image_tag: "v4.2.1"
      dns_min_replicas: "{{ [ 2, groups['kube_control_plane'] | length ] | min }}"
      kuboardspray_extra_downloads:
        kuboard:
          container: true
          file: false
          enabled: "{{ kuboard_enabled }}"
          version: "{{ kuboard_version }}"
          repo: "eipwork/kuboard"
          tag: "{{ kuboard_version }}"
          sha256: ""
          groups:
            - kube_control_plane
        netcheck_etcd:
          container: true
          file: false
          enabled: "{{ deploy_netchecker }}"
          version: "{{ netcheck_etcd_image_tag }}"
          dest: "{{ local_release_dir }}/etcd-{{ netcheck_etcd_image_tag }}-linux-{{ image_arch }}.tar.gz"
          repo: "{{ etcd_image_repo }}"
          tag: "{{ netcheck_etcd_image_tag }}"
          sha256: >-
            {{ etcd_digest_checksum|d(None) }}
          unarchive: false
          owner: "root"
          mode: "0755"
          groups:
            - k8s_cluster
        coredns:
          enabled: "{{ dns_mode in ['coredns', 'coredns_dual'] }}"
          container: true
          repo: "{{ coredns_image_repo }}"
          tag: "{{ coredns_image_tag }}"
          sha256: "{{ coredns_digest_checksum|default(None) }}"
          groups:
            - k8s_cluster

  etcd:
    etcd_version: v3.5.4
    etcd_params:
    etcd_deployment_type:
      - "host"
      - "docker"
  dependency:
    - name: crun
      version: 1.4.4
      target: crun_version
    - name: krew
      version: "v0.4.3"
      target: krew_version
    - name: runc
      version: v1.1.1
      target: runc_version
    - name: cni-plugins
      version: "v1.1.1"
      target: cni_version
    - name: crictl
      version: "v1.24.0"
      target: crictl_version
    - name: nerdctl
      version: "0.19.0"
      target: nerdctl_version
    - name: nginx_image
      version: 1.21.4
      target: nginx_image_tag
    - name: coredns
      target: coredns_version
      version: "v1.8.6"
    - name: cluster-proportional-autoscaler
      target: dnsautoscaler_version
      version: 1.8.5
    - name: pause
      target: pod_infra_version
      version: "3.6"
  network_plugin:
    - name: calico
      params:
        calico_version: "v3.22.3"
    - name: flannel
      params:
        flannel_version: "v0.17.0"
        flannel_cni_version: "v1.0.1"
  addon:
    - name: kuboard
      target: kuboard_enabled
      lifecycle:
        install_by_default: true
        check:
          shell: "kubectl get pods -n kuboard -l k8s.kuboard.cn/name=kuboard-v3"
          keyword: 'kuboard-v3'
        install_addon_tags:
          - download
          - upgrade
          - kuboard
        remove_addon_tags:
          - upgrade
          - kuboard
        downloads:
          - kuboard
      params_default:
        kuboard_version: 'v3.5.0.2'
        kuboard_port: 80
        kuboard_cluster_name: 'default'
        kuboard_data_dir: '/root/kuboard-data'
      params:
    - name: nodelocaldns
      target: enable_nodelocaldns
      lifecycle:
        install_by_default: true
        check:
          shell: "kubectl get daemonset -n kube-system nodelocaldns -o json"
          keyword: '"k8s-app": "kube-dns"'
        install_addon_tags:
          - download
          - upgrade
          - coredns
          - nodelocaldns
        downloads:
          - nodelocaldns
          - coredns
      params:
        nodelocaldns_version: "1.21.1"
        enable_nodelocaldns_secondary: false
    # - name: netchecker
    #   target: deploy_netchecker
    #   lifecycle:
    #     install_by_default: true
    #     check:
    #       shell: "kubectl get deployment -n {{ netcheck_namespace | default('default') }} netchecker-server -o json"
    #       keyword: "k8s-netchecker-server"
    #     install_addon_tags:
    #       - download
    #       - upgrade
    #       - netchecker
    #     remove_addon_tags:
    #       - upgrade
    #       - netchecker
    #     downloads:
    #       - netcheck_server
    #       - netcheck_agent
    #       - netcheck_etcd
    #   params:
    #     netcheck_version: "v1.2.2"
    #     netcheck_agent_image_repo: "{{ docker_image_repo }}/mirantis/k8s-netchecker-agent"
    #     netcheck_agent_image_tag: "{{ netcheck_version }}"
    #     netcheck_server_image_repo: "{{ docker_image_repo }}/mirantis/k8s-netchecker-server"
    #     netcheck_server_image_tag: "{{ netcheck_version }}"
    #     netcheck_etcd_image_tag: "v3.5.4"
    # - name: helm
    #   install_by_default: false
    #   target: helm_enabled
    #   params:
    #     helm_version: "v3.7.1"
    - name: metrics_server
      target: metrics_server_enabled
      lifecycle:
        install_by_default: true
        check:
          shell: "kubectl get deployments -n kube-system metrics-server -o json"
          keyword: "k8s.gcr.io/metrics-server/metrics-server"
        install_addon_tags:
          - download
          - upgrade
          - metrics_server
        remove_addon_tags:
          - upgrade
          - metrics_server
        downloads:
          - metrics_server
      params:
        metrics_server_version: "v0.5.2"
    # - name: cephfs_provisioner
    #   install_by_default: false
    #   target: cephfs_provisioner_enabled
    #   params:
    #     csi_attacher_image_repo: "{{ kube_image_repo }}/sig-storage/csi-attacher"
    #     csi_attacher_image_tag: "v3.3.0"
    #     csi_provisioner_image_repo: "{{ kube_image_repo }}/sig-storage/csi-provisioner"
    #     csi_provisioner_image_tag: "v3.0.0"
    #     csi_snapshotter_image_repo: "{{ kube_image_repo }}/sig-storage/csi-snapshotter"
    #     csi_snapshotter_image_tag: "v4.2.1"
    #     csi_resizer_image_repo: "{{ kube_image_repo }}/sig-storage/csi-resizer"
    #     csi_resizer_image_tag: "v1.3.0"
    #     csi_node_driver_registrar_image_repo: "{{ kube_image_repo }}/sig-storage/csi-node-driver-registrar"
    #     csi_node_driver_registrar_image_tag: "v2.4.0"
    #     csi_livenessprobe_image_repo: "{{ kube_image_repo }}/sig-storage/livenessprobe"
    #     csi_livenessprobe_image_tag: "v2.5.0"
    # - name: local_path_provisioner
    #   install_by_default: false
    #   target: local_path_provisioner_enabled
    #   params:
    #     local_path_provisioner_image_tag: "v0.0.19"
