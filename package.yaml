metadata:
  version: spray-v2.18.0a-0_k8s-v1.23.3_v1.5-amd64
  type: kubernetes-offline-resource
  kuboard_spray_version:
    min: v1.0.0-alpha.5
  available_at:
    - registry.cn-shanghai.aliyuncs.com/kuboard-spray/kuboard-spray-resource
    - swr.cn-east-2.myhuaweicloud.com/kuboard/kuboard-spray-resource
    - eipwork/kuboard-spray-resource
  issue_date: '2021-01-26'
  owner: 'shaohq@foxmail.com'
  can_upgrade_from:
  supported_os:
    - distribution: Ubuntu
      versions:
        - '20.04'
    - distribution: CentOS
      versions:
        - '7.6'
        - '7.8'
        - '7.9'

data:
  kubespray_version: v2.18.0a-0
  supported_playbooks:
    install_cluster: pb_cluster.yaml
    remove_node: pb_remove_node.yaml
    add_node: pb_scale.yaml
    sync_nginx_config: pb_sync_nginx_config.yaml
    sync_etcd_address: pb_sync_etcd_address.yaml
    install_addon: pb_install_addon.yaml

  kubernetes:
    kube_version: 'v1.23.3'
    image_arch: amd64
    gcr_image_repo: 'gcr.io'
    kube_image_repo: 'k8s.gcr.io'

  container_engine:
    - container_manager: 'containerd'
      params:
        containerd_version: 1.5.9
    - container_manager: 'docker'
      params:
        docker_version: '20.10'
        docker_containerd_version: 1.4.12

  vars:
    k8s_cluster:
      dns_min_replicas: "{{ [ 2, groups['kube_control_plane'] | length ] | min }}"
      kuboardspray_extra_downloads:
        netcheck_etcd:
          container: true
          file: false
          enabled: "{{ deploy_netchecker }}"
          version: "{{ netcheck_etcd_image_tag }}"
          dest: "{{ local_release_dir }}/etcd-{{ netcheck_etcd_image_tag }}-linux-{{ image_arch }}.tar.gz"
          repo: "{{ etcd_image_repo }}"
          tag: "{{ netcheck_etcd_image_tag }}"
          sha256: >-
            {{ etcd_digest_checksum|d(None) }}
          unarchive: false
          owner: "root"
          mode: "0755"
          groups:
          - k8s_cluster
      kubeadm_checksums:
        amd64:
          v1.23.3: 57ec7f2921568dcf4cda0699b877cc830d49ddd2709e035c339a5afc3b83586f
      kubelet_checksums:
        amd64:
          v1.23.3: 8f9d2dd992af82855fbac2d82e030429b08ba7775e4fee7bf043eb857dfb0317
      kubectl_checksums:
        amd64:
          v1.23.3: d7da739e4977657a3b3c84962df49493e36b09cc66381a5e36029206dd1e01d0

  etcd:
    etcd_version: v3.5.1
    etcd_params:
    etcd_deployment_type: 
      - 'host'
      - 'docker'
  dependency:
    - name: crun
      version: 1.4
      target: crun_version
    - name: runc
      version: v1.0.3
      target: runc_version
    - name: cni-plugins
      version: "v1.0.1"
      target: cni_version
    - name: crictl
      version: 'v1.23.0'
      target: crictl_version
    - name: nerdctl
      version: '0.15.0'
      target: nerdctl_version
    - name: nginx_image
      version: 1.21.4
      target: nginx_image_tag
    - name: coredns
      target: coredns_version
      version: 'v1.8.6'
    - name: cluster-proportional-autoscaler
      target: dnsautoscaler_version
      version: 1.8.5
    - name: pause
      target: pod_infra_version
      version: '3.3'
  network_plugin:
    - name: calico
      params:
        calico_version: 'v3.21.2'
    - name: flannel
      params:
        flannel_version: "v0.15.1"
  addon:
    - name: nodelocaldns
      target: enable_nodelocaldns
      lifecycle:
        install_by_default: true
        check:
          shell: "kubectl get daemonset -n kube-system nodelocaldns -o json"
          keyword: "\"k8s-app\": \"kube-dns\""
        install_addon_tags:
          - download
          - upgrade
          - coredns
          - nodelocaldns
        downloads:
          - nodelocaldns
          - coredns
      params:
        nodelocaldns_version: '1.21.1'
        enable_nodelocaldns_secondary: false
    - name: netchecker
      target: deploy_netchecker
      lifecycle:
        install_by_default: true
        check:
          shell: "kubectl get deployment -n {{ netcheck_namespace | default('default') }} netchecker-server -o json"
          keyword: "k8s-netchecker-server"
        install_addon_tags:
          - download
          - upgrade
          - netchecker
        downloads:
          - netcheck_server
          - netcheck_agent
          - netcheck_etcd
      params:
        netcheck_version: "v1.2.2"
        netcheck_agent_image_repo: "{{ docker_image_repo }}/mirantis/k8s-netchecker-agent"
        netcheck_agent_image_tag: "{{ netcheck_version }}"
        netcheck_server_image_repo: "{{ docker_image_repo }}/mirantis/k8s-netchecker-server"
        netcheck_server_image_tag: "{{ netcheck_version }}"
        netcheck_etcd_image_tag: "v3.5.1"
    # - name: helm
    #   install_by_default: false
    #   target: helm_enabled
    #   params:
    #     helm_version: "v3.7.1"
    - name: metrics_server
      target: metrics_server_enabled
      lifecycle:
        install_by_default: true
        check:
          shell: "kubectl get deployments -n kube-system metrics-server -o json"
          keyword: "k8s.gcr.io/metrics-server/metrics-server"
        install_addon_tags:
          - download
          - upgrade
          - metrics_server
        downloads:
          - metrics_server
      params:
        metrics_server_version: "v0.5.2"
    # - name: cephfs_provisioner
    #   install_by_default: false
    #   target: cephfs_provisioner_enabled
    #   params:
    #     csi_attacher_image_repo: "{{ kube_image_repo }}/sig-storage/csi-attacher"
    #     csi_attacher_image_tag: "v3.3.0"
    #     csi_provisioner_image_repo: "{{ kube_image_repo }}/sig-storage/csi-provisioner"
    #     csi_provisioner_image_tag: "v3.0.0"
    #     csi_snapshotter_image_repo: "{{ kube_image_repo }}/sig-storage/csi-snapshotter"
    #     csi_snapshotter_image_tag: "v4.2.1"
    #     csi_resizer_image_repo: "{{ kube_image_repo }}/sig-storage/csi-resizer"
    #     csi_resizer_image_tag: "v1.3.0"
    #     csi_node_driver_registrar_image_repo: "{{ kube_image_repo }}/sig-storage/csi-node-driver-registrar"
    #     csi_node_driver_registrar_image_tag: "v2.4.0"
    #     csi_livenessprobe_image_repo: "{{ kube_image_repo }}/sig-storage/livenessprobe"
    #     csi_livenessprobe_image_tag: "v2.5.0"
    # - name: local_path_provisioner
    #   install_by_default: false
    #   target: local_path_provisioner_enabled
    #   params:
    #     local_path_provisioner_image_tag: "v0.0.19"

