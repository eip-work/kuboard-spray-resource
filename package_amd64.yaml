metadata:
  version: spray-v2.18.0a-6_k8s-v1.23.4_v1.7-amd64
  type: kubernetes-offline-resource
  kuboard_spray_version:
    min: v1.0.0-beta.2
  available_at:
    - registry.cn-shanghai.aliyuncs.com/kuboard-spray/kuboard-spray-resource
    - swr.cn-east-2.myhuaweicloud.com/kuboard/kuboard-spray-resource
    - eipwork/kuboard-spray-resource
  issue_date: "2021-02-20"
  owner: "shaohq@foxmail.com"
  can_upgrade_from:
    include:
      - spray-v2.18.[0-9a-]*_k8s-v1.23.[1-3]_v[0-9.]*-amd64
      - spray-master-8d9ed01_k8s-v1.23.[1-3]_v[0-9.]*-amd64
    exclude:
  can_replace_to:
  supported_os:
    - distribution: Ubuntu
      versions:
        - "20.04" #已验证
    - distribution: CentOS
      versions:
        - "7.6"
        - "7.8"
        - "7.9" #已验证
        - "8"
    - distribution: Anolis
      versions:
        - "8.5" #已验证
        - "8.4"
    - distribution: OracleLinux
      versions:
        - "8.5"
    - distribution: Rocky
      versions:
        - "8.5" #已验证
    - distribution: openEuler
      versions:
        - "20.03" #已验证
    - distribution: Kylin Linux Advanced Server
      versions:
        - "V10" #已验证
    - distribution: openSUSE Leap
      versions:
        - "15.3" #已验证

data:
  kubespray_version: v2.18.0a-6
  supported_playbooks:
    install_cluster: pb_cluster.yaml
    remove_node: pb_remove_node.yaml
    add_node: pb_scale.yaml
    sync_nginx_config: pb_sync_nginx_config.yaml
    sync_etcd_address: pb_sync_etcd_address.yaml
    install_addon: pb_install_addon.yaml
    remove_addon: pb_remove_addon.yaml
    cluster_version_containerd: pb_cluster_version_containerd.yaml
    cluster_version_docker: pb_cluster_version_docker.yaml
    upgrade_cluster: pb_upgrade_cluster.yaml
    drain_node: pb_drain_node.yaml
    uncordon_node: pb_uncordon_node.yaml
    cis_scan: true ## 只在此属性为 true 的时候激活 CIS 扫描
    renew_cert: pb_renew_cert.yaml

  kubernetes:
    kube_version: "v1.23.4"
    image_arch: amd64
    gcr_image_repo: "gcr.io"
    kube_image_repo: "k8s.gcr.io"
    candidate_admission_plugins: AlwaysAdmit,AlwaysDeny,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,DefaultIngressClass,DefaultStorageClass,DefaultTolerationSeconds,DenyServiceExternalIPs,EventRateLimit,ExtendedResourceToleration,ImagePolicyWebhook,LimitPodHardAntiAffinityTopology,LimitRanger,MutatingAdmissionWebhook,NamespaceAutoProvision,NamespaceExists,NamespaceLifecycle,NodeRestriction,OwnerReferencesPermissionEnforcement,PersistentVolumeClaimResize,PersistentVolumeLabel,PodNodeSelector,PodSecurity,PodTolerationRestriction,Priority,ResourceQuota,RuntimeClass,SecurityContextDeny,ServiceAccount,StorageObjectInUseProtection,TaintNodesByCondition,ValidatingAdmissionWebhook
    default_enabled_admission_plugins: CertificateApproval,CertificateSigning,CertificateSubjectRestriction,DefaultIngressClass,DefaultStorageClass,DefaultTolerationSeconds,LimitRanger,MutatingAdmissionWebhook,NamespaceLifecycle,PersistentVolumeClaimResize,Priority,ResourceQuota,RuntimeClass,ServiceAccount,StorageObjectInUseProtection,TaintNodesByCondition,ValidatingAdmissionWebhook

  container_engine:
    - container_manager: "containerd"
      params:
        containerd_version: 1.6.0
    - container_manager: "docker"
      params:
        docker_version: "20.10"
        docker_containerd_version: 1.4.12

  vars:
    target:
      # kubeadm_init_phases_skip_default: [ "preflight", "addon/coredns" ]
      containerd_version: 1.6.0
      kubelet_checksums:
        amd64:
          v1.23.4: ec3db57edcce219c24ef37f4a6a2eef5a1543e4a9bd15e7ecc993b9f74950d91
      kubectl_checksums:
        amd64:
          v1.23.4: 3f0398d4c8a5ff633e09abd0764ed3b9091fafbe3044970108794b02731c72d6
      kubeadm_checksums:
        amd64:
          v1.23.4: c91912c9fd34a50492f889e08ff94c447fdceff150b588016fecc9051a1e56b8
      containerd_archive_checksums:
        amd64:
          1.6.0: f77725e4f757523bf1472ec3b9e02b09303a5d99529173be0f11a6d39f5676e9
      nerdctl_archive_checksums:
        amd64:
          0.17.0: 4c08a6ce657ff851dd7a7b1d21c64f1c1950e35de03fa7f1853eab47fa2b2d53
      dns_min_replicas: "{{ [ 2, groups['kube_control_plane'] | length ] | min }}"
      kuboardspray_extra_downloads:
        netcheck_etcd:
          container: true
          file: false
          enabled: "{{ deploy_netchecker }}"
          version: "{{ netcheck_etcd_image_tag }}"
          dest: "{{ local_release_dir }}/etcd-{{ netcheck_etcd_image_tag }}-linux-{{ image_arch }}.tar.gz"
          repo: "{{ etcd_image_repo }}"
          tag: "{{ netcheck_etcd_image_tag }}"
          sha256: >-
            {{ etcd_digest_checksum|d(None) }}
          unarchive: false
          owner: "root"
          mode: "0755"
          groups:
            - k8s_cluster
        coredns:
          enabled: "{{ dns_mode in ['coredns', 'coredns_dual'] }}"
          container: true
          repo: "{{ coredns_image_repo }}"
          tag: "{{ coredns_image_tag }}"
          sha256: "{{ coredns_digest_checksum|default(None) }}"
          groups:
            - k8s_cluster

  etcd:
    etcd_version: v3.5.1
    etcd_params:
    etcd_deployment_type:
      - "host"
      - "docker"
  dependency:
    - name: crun
      version: 1.4
      target: crun_version
    - name: runc
      version: v1.1.0
      target: runc_version
    - name: cni-plugins
      version: "v1.0.1"
      target: cni_version
    - name: crictl
      version: "v1.23.0"
      target: crictl_version
    - name: nerdctl
      version: "0.17.0"
      target: nerdctl_version
    - name: nginx_image
      version: 1.21.4
      target: nginx_image_tag
    - name: coredns
      target: coredns_version
      version: "v1.8.6"
    - name: cluster-proportional-autoscaler
      target: dnsautoscaler_version
      version: 1.8.5
    - name: pause
      target: pod_infra_version
      version: "3.6"
  network_plugin:
    - name: calico
      params:
        calico_version: "v3.21.4"
    - name: flannel
      params:
        flannel_version: "v0.15.1"
        flannel_cni_version: "v1.0.0"
  addon:
    - name: nodelocaldns
      target: enable_nodelocaldns
      lifecycle:
        install_by_default: true
        check:
          shell: "kubectl get daemonset -n kube-system nodelocaldns -o json"
          keyword: '"k8s-app": "kube-dns"'
        install_addon_tags:
          - download
          - upgrade
          - coredns
          - nodelocaldns
        downloads:
          - nodelocaldns
          - coredns
      params:
        nodelocaldns_version: "1.21.1"
        enable_nodelocaldns_secondary: false
    - name: netchecker
      target: deploy_netchecker
      lifecycle:
        install_by_default: true
        check:
          shell: "kubectl get deployment -n {{ netcheck_namespace | default('default') }} netchecker-server -o json"
          keyword: "k8s-netchecker-server"
        install_addon_tags:
          - download
          - upgrade
          - netchecker
        remove_addon_tags:
          - upgrade
          - netchecker
        downloads:
          - netcheck_server
          - netcheck_agent
          - netcheck_etcd
      params:
        netcheck_version: "v1.2.2"
        netcheck_agent_image_repo: "{{ docker_image_repo }}/mirantis/k8s-netchecker-agent"
        netcheck_agent_image_tag: "{{ netcheck_version }}"
        netcheck_server_image_repo: "{{ docker_image_repo }}/mirantis/k8s-netchecker-server"
        netcheck_server_image_tag: "{{ netcheck_version }}"
        netcheck_etcd_image_tag: "v3.5.1"
    # - name: helm
    #   install_by_default: false
    #   target: helm_enabled
    #   params:
    #     helm_version: "v3.7.1"
    - name: metrics_server
      target: metrics_server_enabled
      lifecycle:
        install_by_default: true
        check:
          shell: "kubectl get deployments -n kube-system metrics-server -o json"
          keyword: "k8s.gcr.io/metrics-server/metrics-server"
        install_addon_tags:
          - download
          - upgrade
          - metrics_server
        remove_addon_tags:
          - upgrade
          - metrics_server
        downloads:
          - metrics_server
      params:
        metrics_server_version: "v0.5.2"
    # - name: cephfs_provisioner
    #   install_by_default: false
    #   target: cephfs_provisioner_enabled
    #   params:
    #     csi_attacher_image_repo: "{{ kube_image_repo }}/sig-storage/csi-attacher"
    #     csi_attacher_image_tag: "v3.3.0"
    #     csi_provisioner_image_repo: "{{ kube_image_repo }}/sig-storage/csi-provisioner"
    #     csi_provisioner_image_tag: "v3.0.0"
    #     csi_snapshotter_image_repo: "{{ kube_image_repo }}/sig-storage/csi-snapshotter"
    #     csi_snapshotter_image_tag: "v4.2.1"
    #     csi_resizer_image_repo: "{{ kube_image_repo }}/sig-storage/csi-resizer"
    #     csi_resizer_image_tag: "v1.3.0"
    #     csi_node_driver_registrar_image_repo: "{{ kube_image_repo }}/sig-storage/csi-node-driver-registrar"
    #     csi_node_driver_registrar_image_tag: "v2.4.0"
    #     csi_livenessprobe_image_repo: "{{ kube_image_repo }}/sig-storage/livenessprobe"
    #     csi_livenessprobe_image_tag: "v2.5.0"
    # - name: local_path_provisioner
    #   install_by_default: false
    #   target: local_path_provisioner_enabled
    #   params:
    #     local_path_provisioner_image_tag: "v0.0.19"
